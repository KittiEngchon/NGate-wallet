// kyc.js

async function fetchUserList() {
  try {
    const response = await fetch('user.json');
    if (!response.ok) throw new Error("‡πÇ‡∏´‡∏•‡∏î user.json ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
    return await response.json();
  } catch (err) {
    console.error("‚ùå Error loading user.json:", err);
    toast("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ");
    return [];
  }
}

async function checkKYC(address) {
  const users = await fetchUserList();
  const user = users.find(u => u.wallet.toLowerCase() === address.toLowerCase());
  return user ? user.kyc === true : false;
}

async function getUserInfo(address) {
  const users = await fetchUserList();
  return users.find(u => u.wallet.toLowerCase() === address.toLowerCase()) || null;
}

function requireKYC(callback) {
  const address = localStorage.getItem("wallet");
  if (!address) {
    toast("üõë ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Wallet");
    return;
  }

  checkKYC(address).then(verified => {
    if (verified) {
      callback();
    } else {
      toast("üö´ ‡∏ï‡πâ‡∏≠‡∏á‡∏ú‡πà‡∏≤‡∏ô KYC ‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∂‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ");
    }
  });
}

